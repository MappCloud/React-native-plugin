apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}
allprojects {
    repositories {
        flatDir {
            dirs 'libs'
        }
        google()
        jcenter()
    }
}
android {
  compileSdkVersion safeExtGet('compileSdkVersion', 28)
  buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', 19)
    targetSdkVersion safeExtGet('targetSdkVersion', 28)
    versionCode 1
    versionName '1.0'
  }

    buildTypes {
          release {
              minifyEnabled false
              proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
          }
      }
}


dependencies {
    implementation  'com.facebook.react:react-native:+'
    implementation('com.google.android.gms:play-services-location:16.0.0')
            {
                exclude group: 'com.android.support'
            }
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.google.dagger:dagger-android-support:2.16"
    implementation 'com.google.dagger:dagger:2.16'

    implementation ("com.google.firebase:firebase-messaging:${safeExtGet('firebaseMessagingVersion', '17.3.4')}")
            {
                exclude group: 'com.android.support'
            }
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'
//    implementation "com.google.firebase:firebase-core:${safeExtGet('firebaseCoreVersion', '16.0.9')}"
    implementation project(path: ':Mapp_Androi_SDK_frankfurt-5.0.6')
}
  